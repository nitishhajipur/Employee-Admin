{"version":3,"file":"static/js/894.36da37d0.chunk.js","mappings":"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","sources":["components/appauthentication/SignIn.tsx","config/Fetch.ts"],"sourcesContent":["import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport rightPortionImage from '../../assets/leftcoverpoto.webp'\r\nimport './styles.scss'\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { FetchData } from '../../config/Fetch'\r\nimport { toast } from 'react-toastify'\r\nimport { error } from 'console'\r\nimport ForgotPassword from './ForgotPassWord'\r\nimport { useDispatch } from 'react-redux'\r\nimport { appTypes } from '../../reducer/types'\r\nimport img from '../../assets/login-page.png'\r\nconst SignIn = () => {\r\n    const dispatch=useDispatch()\r\n\r\n\r\n\r\n    const sighnUp = () => {\r\n        navigate('/signUp')\r\n\r\n    }\r\n    const schema = Yup.object().shape({\r\n        userName: Yup.string().required(\"Please Enter UserName\"),\r\n        password: Yup.string().required(\"Please Enter Password\")\r\n    })\r\n\r\n    const navigate = useNavigate()\r\n    return (\r\n        <>\r\n            <div className='sighnIn row'>\r\n            <div className='col-lg-6 col-md-6 col-sm-12 col-xs-12 loginleftContainer'>\r\n                <div>\r\n                     \r\n            <p className='primaryheader'>Welcome ! Lets get started</p>\r\n                <img src={img} alt= \"login png\" className='im-fluid' />\r\n                </div>\r\n\r\n            </div>\r\n              \r\n             <div  className='authenticationContainer col-lg-6 col-md-6 col-sm-12 col-xs-12 '>\r\n\r\n                   <div className='contentContainer'>\r\n                        <p className='primaryheader'> Sighn In </p>\r\n                        <Formik\r\n                            initialValues={{ userName: '', password: '' }}\r\n                            validationSchema={schema}\r\n                            onSubmit={(values: any) => {\r\n                                FetchData({\r\n                                    url: 'http://localhost:3006/api/validateAdmin',\r\n                                    method: 'POST',\r\n                                    data: values\r\n                                }).then((response: any) => {\r\n                                    console.log('resppp', response.data)\r\n                                    if(response.data?.status === 'error'){\r\n                                        toast.error(response.data.message)\r\n                                    }else{\r\n                                        sessionStorage.setItem('id',response.data.id)\r\n                                        console.log(\"59...\",response.data)\r\n                                      \r\n                                        dispatch({type:appTypes.IS_AUTHENTICATED,payload:true})\r\n                                        navigate('/')\r\n                                    }\r\n                                }).catch((error: any) => {\r\n                                    toast.error(error.message)\r\n                                })\r\n\r\n                            }}>\r\n                            {({ errors, values, touched, setFieldValue }) => {\r\n                                <>{console.log(values, \"40.....\")}</>\r\n                                return (\r\n                                    <Form\r\n                                        className='signInForm'>\r\n                                        <div className='field'>\r\n\r\n                                            <label>UserName:</label>\r\n                                            <Field\r\n                                                type='text'\r\n                                                value={values?.userName}\r\n                                                name=\"userName\"\r\n                                                placeholder='user name'\r\n                                                className=\"form-control\"\r\n                                                Required\r\n                                            />\r\n                                            {errors?.userName && touched?.userName ? <div className='text-danger'> <ErrorMessage name='userName' /></div> : \"\"}\r\n                                        </div>\r\n                                        <div className='field'>\r\n                                            <label>Password:</label>\r\n                                            <Field type='password' Required className='form-control' name='password' placeholder='password' value={values.password} />\r\n                                            {errors?.password && touched?.password ? <div className='text-danger'><ErrorMessage name='password' /></div> : \"\"}\r\n                                        </div>\r\n                                        <div>\r\n                                            <button type='submit' className='login'> Sign In</button>\r\n                                            <p className='singhUp'> Don't Have Account ? <span onClick={sighnUp}> Register Now </span></p>\r\n                                            {/* <button type='button' onClick={sighnUp} className='sighnUp'> Sign Up</button> */}\r\n                                        </div>\r\n                                        <div>\r\n                                            {/* <ForgotPassword/> */}\r\n                                            <p className='forgotPassword' onClick={(e:any)=>{navigate('/forgotPassword')    }}>Forgot Password ?.</p>\r\n                                        </div>\r\n\r\n                                    </Form>\r\n                                )\r\n                            }}\r\n                        </Formik>\r\n                        </div>\r\n                        </div>\r\n\r\n                        {/* <input type='text' className='form-control' placeholder='username'></input> */}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default SignIn","import axios from \"axios\"\r\n\r\nexport const FetchData=(props:any)=>{\r\n    const options = {\r\n        url: props?.url,\r\n        method: props.method,\r\n        data: props.data,\r\n        // timeOut: (1000 * 2),\r\n        // headers:\"\"\r\n    }\r\n    return (\r\n        axios(options).then((response: any) => {\r\n            return (response)\r\n        })\r\n    )\r\n   \r\n\r\n\r\n}"],"names":["SignIn","dispatch","useDispatch","sighnUp","navigate","schema","Yup","shape","userName","required","password","useNavigate","_jsx","_Fragment","children","_jsxs","className","src","img","alt","Formik","initialValues","validationSchema","onSubmit","values","FetchData","url","method","data","then","response","_response$data","console","log","status","toast","error","message","sessionStorage","setItem","id","type","appTypes","IS_AUTHENTICATED","payload","catch","_ref","errors","touched","setFieldValue","Form","Field","value","name","placeholder","Required","ErrorMessage","onClick","e","props","options","axios"],"sourceRoot":""}