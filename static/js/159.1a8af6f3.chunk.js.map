{"version":3,"file":"static/js/159.1a8af6f3.chunk.js","mappings":"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","sources":["components/appauthentication/SignUp.tsx","config/Fetch.ts"],"sourcesContent":["import Reacrt from 'react'\r\nimport './styles.scss'\r\nimport { useNavigate } from 'react-router'\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { FetchData } from '../../config/Fetch'\r\nimport { toast } from 'react-toastify'\r\nconst SignUp = (props: any) => {\r\n    const navigate = useNavigate()\r\n    const validationSchema = Yup.object().shape({\r\n        firstName: Yup.string().required('! Please Enter first Name'),\r\n        lastName: Yup.string().required('! Please Enter last Name'),\r\n        contactNo: Yup.string().required(\" !Enter Phone Number\"),\r\n        email: Yup.string().required(\" ! Enter  email\").email(\" ! Enter valid email\"),\r\n        userName: Yup.string().required(\" ! Enter user name\"),\r\n        password: Yup.string().required(\"Enter  password\"),\r\n        confirmPassword: Yup.string().required(\" Enter confirm Password\").oneOf([Yup.ref('password')], \"! Passwords don't match\"),\r\n\r\n\r\n    })\r\n    function toastAlert(props: any) {\r\n        if (props.status == 'error') {\r\n            toast.error(props.message)\r\n        } else {\r\n            toast.success(props.message)\r\n            navigate(\"/\")\r\n        }\r\n    }\r\n                            \r\n        const handleSubmit = (values: any) => {\r\n        delete values.confirmPassword\r\n        console.log('20...', values)\r\n        FetchData({\r\n            url: 'http://localhost:3006/api/registerAdmin',\r\n            method: 'POST',\r\n            data: values\r\n        }).then((response: any) => {\r\n            console.log('resppp', response.data)\r\n            toastAlert(response.data)\r\n        }).catch((error: any) => {\r\n            toast.success(error.message)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='sighnUpContaoner'>\r\n                <div className='formContainer'>\r\n\r\n                    <Formik\r\n                        validationSchema={validationSchema}\r\n                        initialValues={{ firstName: '', lastName: '', contactNo: '', email: \"\", userName: \"\", password: \"\", confirmPassword: '' }}\r\n                        onSubmit={(values: any, { resetForm }) => {\r\n                            handleSubmit(values)\r\n                        }}\r\n                        enableReinitialize\r\n                    >\r\n                        {({ values, errors }) => (\r\n                            <Form>\r\n                                <>{console.log(errors, \"22...\")}</>\r\n                                <div className='registration'>\r\n                                    <h4>Register Admin</h4>\r\n                                    <div className='fieldContainer'>\r\n                                        <label>User Name :</label>\r\n                                        <Field\r\n                                            type='text'\r\n                                            name='userName'\r\n                                            placeholder=\"Enter User name\"\r\n                                            className=\"form-control\"\r\n\r\n                                        />\r\n                                        <div className='text-danger'><ErrorMessage name='userName' /></div>\r\n\r\n                                    </div>\r\n                                    <div className='fieldContainer'>\r\n                                        <label>First Name :</label>\r\n                                        <Field\r\n                                            type='text'\r\n                                            name='firstName'\r\n                                            placeholder=\"Enter Your First name\"\r\n                                            className=\"form-control\"\r\n\r\n                                        />\r\n                                        <div className='text-danger'><ErrorMessage name='firstName' /></div>\r\n                                    </div>\r\n                                    <div className='fieldContainer'>\r\n                                        <label>Last Name :</label>\r\n                                        <Field\r\n                                            type='text'\r\n                                            name='lastName'\r\n                                            placeholder=\"Enter Your last name\"\r\n                                            className=\"form-control\"\r\n\r\n                                        />\r\n                                        <div className='text-danger'><ErrorMessage name='lastName' /></div>\r\n                                    </div>\r\n                                    <div className='fieldContainer'>\r\n                                        <label>Phone number :</label>\r\n                                        <Field\r\n                                            type='number'\r\n                                            name='contactNo'\r\n                                            placeholder=\"Enter Phone Number\"\r\n                                            className=\"form-control\"\r\n\r\n                                        />\r\n                                        <div className='text-danger'><ErrorMessage name='contactNo' /></div>\r\n                                    </div>\r\n                                    <div className='fieldContainer'>\r\n                                        <label>Email :</label>\r\n                                        <Field\r\n                                            type='email'\r\n                                            name='email'\r\n                                            placeholder=\"Enter Your MailId\"\r\n                                            className=\"form-control\"\r\n\r\n                                        />\r\n                                        <div className='text-danger'><ErrorMessage name='email' /></div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='fieldContainer'>\r\n                                        <label> Password:</label>\r\n                                        <Field\r\n                                            type='password'\r\n                                            name='password'\r\n                                            placeholder=\"Enter password\"\r\n                                            className=\"form-control\"\r\n\r\n                                        />\r\n                                        <div className='text-danger'><ErrorMessage name='password' /></div>\r\n\r\n                                    </div>\r\n                                    <div className='fieldContainer'>\r\n                                        <label>confirmPassword :</label>\r\n                                        <Field\r\n                                            type='password'\r\n                                            name='confirmPassword'\r\n                                            placeholder=\"Confirm Password\"\r\n                                            className=\"form-control\"\r\n\r\n\r\n                                        />\r\n                                        <div className='text-danger'><ErrorMessage name='confirmPassword' /></div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className='m-2'>\r\n                                    <button className='btn btn-outline-warning me-1' onClick={(e: any) => navigate('/')}>Back to Sign-In</button>\r\n                                    <button type='submit' className='btn btn-success'> Register New</button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default SignUp","import axios from \"axios\"\r\n\r\nexport const FetchData=(props:any)=>{\r\n    const options = {\r\n        url: props?.url,\r\n        method: props.method,\r\n        data: props.data,\r\n        // timeOut: (1000 * 2),\r\n        // headers:\"\"\r\n    }\r\n    return (\r\n        axios(options).then((response: any) => {\r\n            return (response)\r\n        })\r\n    )\r\n   \r\n\r\n\r\n}"],"names":["props","navigate","useNavigate","validationSchema","Yup","shape","firstName","required","lastName","contactNo","email","userName","password","confirmPassword","oneOf","handleSubmit","values","console","log","FetchData","url","method","data","then","response","status","toast","error","message","success","toastAlert","catch","_jsx","_Fragment","children","className","Formik","initialValues","onSubmit","_ref","resetForm","enableReinitialize","_ref2","errors","_jsxs","Form","Field","type","name","placeholder","ErrorMessage","onClick","e","options","axios"],"sourceRoot":""}